	private static int[] parent, size;
  private static int N;
  
  public static void init(){
  	parent = new int[N];
		size = new int[N];
		for (int i = 0; i < N; i++) {
			parent[i] = i;
		}
		for (int i = 0; i < N; i++) {
			size[i] = 1;
		}
 }
  
  public static int sizeOf(int target) {
		return size[find(target)];
	}

	public static int find(int target) {
		int parentIndex = target;
		while (parent[parentIndex] != parentIndex) {
			parentIndex = parent[parentIndex];
		}
		int i = target;
		while (i != parentIndex) {
			i = parent[i];
			parent[i] = parentIndex;
		}
		return parentIndex;
	}

	public static void join(int target1, int target2) {
		int root1 = find(target1);
		int root2 = find(target2);
		if (size[root1] > size[root2]) {
			root1 = root2 ^ root1 ^ (root2 = root1);
		}
		if (root1 != root2) {
			parent[root1] = root2;
			size[root2] += size[root1];
		}
	}
